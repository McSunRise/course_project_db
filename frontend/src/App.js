import React, { useState } from 'react';
import DataFetcher from './DataFetcher';
import CreateForm from './CreateForm';
import EditForm from './EditForm';
import SearchById from './SearchById';

function App() {
  const [selectedTable, setSelectedTable] = useState('clients');
  const [editingItem, setEditingItem] = useState(null);
  const [creating, setCreating] = useState(false);
  const [showTable, setShowTable] = useState(true);

  const handleEdit = (item) => {
    setEditingItem(item);
    setCreating(false);
    setShowTable(false);
  };

  const handleDelete = (item) => {
    if (!window.confirm('–£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å?')) return;

    fetch(`http://localhost:8000/api/${selectedTable}/${item.id}`, {
      method: 'DELETE',
    })
      .then((res) => {
        if (!res.ok) throw new Error(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ${res.status}`);
        alert('–£–¥–∞–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
        setEditingItem(null);
        setShowTable(true);
      })
      .catch((err) => alert(err.message));
  };

  const handleBack = () => {
    setEditingItem(null);
    setCreating(false);
    setShowTable(true);
  };

  return (
    <div style={{ padding: '20px', fontFamily: 'Arial' }}>
      <h1>üì¶ –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ë–î</h1>

      <label>
        –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞–±–ª–∏—Ü—É:
        <select
          value={selectedTable}
          onChange={(e) => {
            setSelectedTable(e.target.value);
            setShowTable(true);
            setEditingItem(null);
            setCreating(false);
          }}
          style={{ marginLeft: '10px' }}
        >
          <option value="clients">–ö–ª–∏–µ–Ω—Ç—ã</option>
          <option value="drivers">–í–æ–¥–∏—Ç–µ–ª–∏</option>
          <option value="cars">–ú–∞—à–∏–Ω—ã</option>
          <option value="orders">–ó–∞–∫–∞–∑—ã</option>
          <option value="staff">–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏</option>
          <option value="positions">–î–æ–ª–∂–Ω–æ—Å—Ç–∏</option>
          <option value="assignments">–ù–∞–∑–Ω–∞—á–µ–Ω–∏—è</option>
          <option value="orders_drivers">–ó–∞–∫–∞–∑—ã-–≤–æ–¥–∏—Ç–µ–ª–∏</option>
          <option value="tech_inspection">–¢–µ—Ö–æ—Å–º–æ—Ç—Ä</option>
        </select>
      </label>

      <SearchById
        table={selectedTable}
        onSelect={(item) => {
          setEditingItem(item);
          setCreating(false);
          setShowTable(false);
        }}
        onHideTable={() => setShowTable(false)}
      />

      {showTable && (
        <>
          <button onClick={() => setCreating(true)} style={{ marginTop: '10px' }}>
            ‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å
          </button>
          <DataFetcher
            table={selectedTable}
            onEdit={handleEdit}
            onDelete={handleDelete}
          />
        </>
      )}

      {creating && (
        <>
          <h3>üìù –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏</h3>
          <CreateForm
            table={selectedTable}
            onSuccess={() => {
              setCreating(false);
            }}
          />
          <button onClick={handleBack} style={{ marginTop: '10px' }}>üîô –ù–∞–∑–∞–¥</button>
        </>
      )}

      {editingItem && (
        <>
          <EditForm
            table={selectedTable}
            item={editingItem}
            onSuccess={() => {
              setEditingItem(null);
              setShowTable(true);
            }}
          />
          <button
            onClick={() => handleDelete(editingItem)}
            style={{ marginTop: '10px', marginRight: '10px', color: 'red' }}
          >
            üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å
          </button>
          <button onClick={handleBack}>üîô –ù–∞–∑–∞–¥</button>
        </>
      )}
    </div>
  );
}

export default App;
