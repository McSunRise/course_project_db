import React, { useEffect, useState } from 'react';

function DataFetcher({ table, reload, onSelectRow }) {
  const [data, setData] = useState(null);
  const [error, setError] = useState(null);

  const url = `http://localhost:8000/api/${table}`;

  useEffect(() => {
    setData(null);
    fetch(url)
      .then(response => {
        if (!response.ok) throw new Error(`–û—à–∏–±–∫–∞: ${response.status}`);
        return response.json();
      })
      .then(json => setData(json))
      .catch(err => setError(err.message));
  }, [table, reload]);

  if (error) return <div>‚ùå –û—à–∏–±–∫–∞: {error}</div>;
  if (!data) return <div>‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...</div>;
  if (!Array.isArray(data)) return <pre>{JSON.stringify(data, null, 2)}</pre>;

  return (
    <div style={{ marginTop: '20px' }}>
      <h2>–°–æ–¥–µ—Ä–∂–∏–º–æ–µ {table}</h2>
      <table border="1" cellPadding="8" style={{ borderCollapse: 'collapse', cursor: 'pointer' }}>
        <thead>
          <tr>
            {Object.keys(data[0] || {}).map((key) => (
              <th key={key}>{key}</th>
            ))}
          </tr>
        </thead>
        <tbody>
          {data.map((item) => (
            <tr
              key={item.id || JSON.stringify(item)}
              onClick={() => onSelectRow?.(item)} // ‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—ã–∑–æ–≤
              style={{ backgroundColor: '#f9f9f9' }}
            >
              {Object.keys(item).map((key) => (
                <td key={key}>{String(item[key])}</td>
              ))}
            </tr>
          ))}
        </tbody>
      </table>
      <p style={{ marginTop: '10px' }}>üí° –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∑–∞–ø–∏—Å—å, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –µ—ë</p>
    </div>
  );
}

export default DataFetcher;
